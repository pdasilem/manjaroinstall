#!/bin/bash
#────────────────────────────────
#  Version  : Manjaro Linux Install v.3.0.1
#           :
#  Author   : LinuxShef
#           :
#  Project  : https://github.com/shefpower/manjaroinstall.git
#           :
#  License  : LGPL-3.0 (http://opensource.org/licenses/lgpl-3.0.html)
#           :
#────────────────────────────────
clear
source config/logo/logo1
sleep 3
clear
source config/logo/logo2
sed -i s/'#en_US.UTF-8'/'en_US.UTF-8'/g /etc/locale.gen
sed -i s/'#ru_RU.UTF-8'/'ru_RU.UTF-8'/g /etc/locale.gen
chmod 777 /etc/locale.conf
chmod 777 /etc/vconsole.conf
echo 'LANG=ru_RU.UTF-8' > /etc/locale.conf
echo 'KEYMAP=ru' > /etc/vconsole.conf
echo 'FONT=cyr-sun16' >> /etc/vconsole.conf
chmod 644 /etc/locale.conf
chmod 644 /etc/vconsole.conf
setfont cyr-sun16
locale-gen >/dev/null 2>&1; RETVAL=$?
systemctl restart dhcpcd
dhcpcd
clear
source config/logo/logo3
      read main_menu
      case "$main_menu" in
         "1" ) clear
           ;;
         "2" ) clear ; source config/logo/logo4
sleep 2
read -t 99999 -n 1 -s -r -p "
                                                              -> Нажмите Enter для продолжения <- "
clear
fdisk -l

sleep 2
read -t 99999 -n 1 -s -r -p "
                                                              -> Нажмите Enter для продолжения <- "
clear
source config/logo/logo5
read -p "
                                                              -> Введите значение : " namedisk
cfdisk --zero /dev/$namedisk
      esac
clear
source config/logo/logo6
read -p "
                                                             -> Введите значение : " region

clear
source config/logo/logo7
sleep 2
read -t 99999 -n 1 -s -r -p "
                                                               -> Нажмите Enter для продолжения <- "
clear
fdisk -l

sleep 2
read -t 99999 -n 1 -s -r -p "
                                                               -> Нажмите Enter для продолжения <- "

clear
source config/logo/logo8
read -p "
                                                                -> Введите значение : " disk
clear
source config/logo/logo9
  echo -e "

      \t                                                -> SSD - Nvme - m2 - usb_flash  (   1   )  "

    echo -e "

      \t                                                    ->       HDD        (   2   )  "

    echo -n "

                                                           -> Введите значение : "

      read main_menu
      case "$main_menu" in
         "1" ) clear ;
         sub='rw,noatime,compress=zstd:2,ssd,space_cache=v2,discard=async,subvol'
           ;;
         "2" ) clear ;
         sub='rw,relatime,space_cache=v2,autodefrag,nodatacow,subvol'
      esac

clear
source config/logo/logo10
    echo -e "

      \t                                                   -> Смонтировать разделы введите    1   "

    echo -e "

      \t                                                   -> Показать подсказку о разделах введите   2   "

    echo -n "

                                                              -> Введите значение : "

      read main_menu
      case "$main_menu" in
         "1" ) clear
           ;;
         "2" ) clear ;
fdisk -l
sleep 2
read -t 99999 -n 1 -s -r -p "
                                                                 -> Нажмите Enter для продолжения <- "
      esac
source config/logo/logo11

read -p "
                                                                    -> Boot: " boot
read -p "

                                                                    -> Root: " root
read -p "

                                                                    -> Swap: " swap
read -p "

                                                                    -> Home: " home

clear
source config/logo/logo12
echo -e "\t

                                                        -> Для UEFI введите     1    "
echo -e "\t


                                                        -> Не форматировать  введите      2

                                                    ( Для утсановки в один раздел DOS/MBR или рядом с Windows )"
echo -e "\t


                                                      -> Для обычного Bios форматировать в Ext4 введите    3   "
echo -e "\t

                                                      -> Для обычного Bios фоматировать в Ext2 введиет    4   "
echo -n "


                                                       -> Введите значение : "
read main_menu
      case "$main_menu" in
         "1" ) clear ; mkfs.vfat -F32 /dev/$boot
         ;;
         "3" ) clear ; mkfs.ext4 /dev/$boot
         ;;
         "4" ) clear ; mkfs.ext2 /dev/$boot
         ;;
         "2" ) clear
      esac


clear
source config/logo/logo13
echo -e "\t

                                                          -> Форматировать в Btrfs введите    1    "
echo -e "\t


                                                           -> Форматировать в Ext4 введите    2    "
echo -n "

                                                             -> Введите значение : "
read main_menu
      case "$main_menu" in
         "1" ) clear ; mkfs.btrfs -f /dev/$root ; btr='source config/btrfs'
         ;;
         "2" ) clear ; mkfs.ext4 /dev/$root
      esac

clear

mkswap /dev/$swap
swapon /dev/$swap

clear
source config/logo/logo14
echo -e "\t

                                                          -> Форматировать в Btrfs введите    1    "
echo -e "\t


                                                          -> Форматировать в Ext4 введите    2    "
echo -n "

                                                             -> Введите значение : "
read main_menu
      case "$main_menu" in
         "1" ) clear ; mkfs.btrfs -f /dev/$home
         ;;
         "2" ) clear ; mkfs.ext4 /dev/$home
      esac

clear
source config/logo/logo15
echo -e "\t

                                                        ->    Btrfs  ( БЕЗ home ) введите  (  1  )   "
echo -e "\t


                                                        ->    Ext4   ( БЕЗ home ) введите   (  2  )   "
echo -e "\t


                                                          ->  Смонтировать Home введите   (  3  )  "

echo -n "

                                                            -> Введите значение : "

read main_menu
      case "$main_menu" in
        "1") clear ;
mount  /dev/$root /mnt

btrfs su cr /mnt/@

btrfs su cr /mnt/@home

btrfs su cr /mnt/@var

btrfs su cr /mnt/@log

btrfs su cr /mnt/@pkg

btrfs su cr /mnt/@.snapshots

umount -R /mnt

mount -o ${sub}=@ /dev/$root /mnt

mkdir -p /mnt/{boot,home,var,var/log,var/cache/pacman/pkg,.snapshots}

mount -o ${sub}=@home  /dev/$root  /mnt/home

mount -o ${sub}=@var  /dev/$root  /mnt/var

mount -o ${sub}=@log /dev/$root /mnt/var/log

mount -o ${sub}=@pkg /dev/$root /mnt/var/cache/pacman/pkg

mount -o ${sub}=@.snapshots  /dev/$root  /mnt/.snapshots
         ;;
         "2" ) clear ;
mount  /dev/$root /mnt
mkdir /mnt/boot
        ;;
        "3" ) clear ; source config/logo/logo16
echo -e "\t

                                                           -> Смонтировать Home в Btrfs    1    "
echo -e "\t


                                                           -> Смонтировать Home в Ext4     2    "
echo -n "


                                                              -> Введите значение : "

read main_menu
      case "$main_menu" in
         "1" ) clear ;
mount  /dev/$root /mnt

btrfs su cr /mnt/@

btrfs su cr /mnt/@home

btrfs su cr /mnt/@var

btrfs su cr /mnt/@log

btrfs su cr /mnt/@pkg

btrfs su cr /mnt/@.snapshots

umount -R /mnt

mount -o ${sub}=@ /dev/$root /mnt

mkdir -p /mnt/{boot,home,var,var/log,var/cache/pacman/pkg,.snapshots}

mount /dev/$home /mnt/home

mount -o ${sub}=@var /dev/$root /mnt/var

mount -o ${sub}=@log /dev/$root /mnt/var/log

mount -o ${sub}=@pkg /dev/$root /mnt/var/cache/pacman/pkg

mount -o ${sub}=@.snapshots /dev/$root /mnt/.snapshots
         ;;
         "2" ) clear ;
mount  /dev/$root /mnt
mkdir /mnt/home
mkdir /mnt/boot
mount /dev/$home /mnt/home
      esac

        esac

clear
source config/logo/logo17
echo -e "\t
                                                          -> Для UEFI или EFI введите  (  1  )  "
echo -e "\t

                                                         -> Для обычного Bios введите   (  2  )  "

echo -e "\t
                                                         -> Без boot раздела DOS/MBR   (  3  )

                                                         (Если вы устанавливаете все в один радел для  MBR ) "

echo -n "
                                                             -> Введите значение : "
read main_menu
      case "$main_menu" in
         "1" )
         mkdir /mnt/boot/efi ; mount /dev/$boot /mnt/boot/efi
         Uefi="grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ShefOS --no-nvram --removable /dev/$disk ; grub-install /dev/$disk"
         ;;
         "2" )
         mount /dev/$boot  /mnt/boot/
         BIOS="grub-install /dev/$disk"
         ;;
         "3" )
         clear
         BBOOT="grub-install /dev/$disk"
      esac

clear
source config/logo/logo18
read -p "
                                                    -> Введите пароль root :  " password
clear
source config/logo/logo19
read -p "
                                                   -> Введите имя учетной записи :  " username
clear
source config/logo/logo20
read -p "
                                                -> Введите пароль пользователя :  " userpassword
clear
source config/logo/logo21
    echo -e "


      \t                                                -> Установить графическую оболочку введите     1     "


    echo -e "

      \t                                               -> НЕ устанавливать графическую оболочку введите     2     "


    echo -n "

                                                              -> Введите значение : "

      read main_menu
      case "$main_menu" in
         "1" ) clear ; source config/logo/logo22
echo -e "\t
                                                           -> Для графики Intel введите ( 1 ) "
echo -e "\t


                                                           -> Для графики AMD введите   ( 2 )  "

echo -e "\t

                                                           -> Для графики NVIDIA введите ( 3 ) "

echo -e "\t

                                                           -> Ручная установка драйвера Nvidia ( 4 ) "

echo -e "\t

                                                          -> Для установки драйвера гибридной графики
                                                            Например INTEL + NVIDIA , AMD + NVIDIA и т.д  ( 5 ) "
echo -n "

                                                            -> Введите значение : "
read main_menu
      case "$main_menu" in
         "1" ) source config/drivers/intel
        ;;
         "2" ) source config/drivers/amd
        ;;
         "3" )
clear
source config/logo/logo23
echo -e "\t


                                                      ->  Установить проприетарный драйвер     1     "
echo -e "\t


                                                       ->  Установить Open source драйвер      2    "
echo -n "

                                                          -> Введите значение : "
read main_menu
      case "$main_menu" in
       "1" ) source config/drivers/nvidia/nonfree
       ;;
       "2" ) source config/drivers/nvidia/free
     esac
        ;;
        "4" )
clear
source config/logo/logo24
echo -e "\t

                                                             ->   Продолжить    1     "

echo -n "

                                                             -> Введите значение : "
read main_menu
      case "$main_menu" in
         "1" )
         clear ; mhwd --list
         read -p "
                                                           -> Введите значение : " namedriver

         hwddriver='mhwd --install pci $namedriver'
      esac

        ;;
        "5" )
clear
source config/logo/logo25
echo -e "\t

                                                       ->  INTEL + AMD      1     "

echo -e "\t
                                                       ->  INTEL + NVIDIA ( Проприетарный драйвер  Nvidia )     2    "
echo -e "\t

                                                       ->  INTEL + NVIDIA ( Open source драйвер Nvidia )     3    "

echo -e "\t
                                                       ->  AMD + NVIDA   ( Проприетарный драйвер  Nvidia )    4    "

echo -e "\t
                                                       ->  AMD + NVIDA   ( Open source драйвер Nvidia )    5    "
echo -n "


                                                        -> Введите значение : "
read main_menu
      case "$main_menu" in
       "1" ) source config/drivers/hybrid/intel_amd
       ;;
       "2" ) source config/drivers/hybrid/intel_nvidia_nonfree
       ;;
       "3" ) source config/drivers/hybrid/intel_nvidia_free
       ;;
       "4" ) source config/drivers/hybrid/amd_nvidia_nonfree
       ;;
       "5" ) source config/drivers/hybrid/amd_nvidia_free

      esac

      esac
clear
source config/logo/logo26
echo -e "\t
                                                        -> Для установки KDE введите ( 1 ) "
echo -e "\t

                                                        -> Для установки GNOME введите ( 2 ) "
echo -e "\t

                                                        -> Для установки XFCE введите ( 3 ) "
echo -e "\t

                                                         -> Для установки I3 введите ( 4 ) "
echo -e "\t

                                                         -> Для установки Lxqt введите ( 5 ) "
echo -e "\t

                                                        -> Для установки KDE облегченная введите ( 6 )

                                                                Без пакета    kde-applicatios         "
echo -e "\t

                                                        -> Для установки GNOME облегченная введите ( 7 )

                                                                Без пакета gnome-extra                  "
echo -e "\t

                                                         -> Для установки Cinnamon введите ( 8 ) "
echo -e "\t

                                                         -> Для установки MATE введите ( 9 ) "

echo -n "

                                                            -> Введите значение : "
read main_menu
      case "$main_menu" in
         "1" ) source config/desktop/kde
        ;;
         "2" ) source config/desktop/gnome
        ;;
         "3" ) source config/desktop/xfce
        ;;
         "4" ) source config/desktop/i3
        ;;
         "5" ) source config/desktop/lxqt
        ;;
         "6" ) source config/desktop/kde_lite
        ;;
          "7") source config/desktop/gnome_lite
        ;;
          "8") source config/desktop/cinnamon
        ;;
          "9") source config/desktop/mate
      esac
           ;;
         "2" ) clear ;
      esac
clear
source config/logo/logo29
read -p "
                                                                    -> Введите значение : " programs

#----------------------------------------------------------------------|
#                                                      #
#                         Pacman                       #
#                                                      #
#----------------------------------------------------------------------|
clear
sed -i "/\[multilib\]/,/Include/"'s/^#//' /etc/pacman.conf
sed -i s/'#ParallelDownloads = 5'/'ParallelDownloads = 5'/g /etc/pacman.conf
sed -i s/'#VerbosePkgLists'/'VerbosePkgLists'/g /etc/pacman.conf
sed -i s/'#Color'/'ILoveCandy'/g /etc/pacman.conf
sed -i s/'CheckSpace'/'#CheckSpace'/g /etc/pacman.conf
sed -i s/'#VerbosePkgLists'/'VerbosePkgLists'/g /etc/pacman.conf
source config/logo/logo27
sleep 4
pacman-mirrors --fasttrack
pacman -Syy
pacman -Sy arch-install-scripts --noconfirm
pacman -S --noconfirm base-devel
source config/base ; $base
#----------------------------------------------------------------------------------
fstabgen -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt /bin/bash -c "ln -sf /usr/share/zoneinfo/$region /etc/localtime"
arch-chroot /mnt /bin/bash -c "hwclock --systohc"
arch-chroot /mnt /bin/bash -c "sed -i s/'#en_US.UTF-8'/'en_US.UTF-8'/g /etc/locale.gen"
arch-chroot /mnt /bin/bash -c "sed -i s/'#ru_RU.UTF-8'/'ru_RU.UTF-8'/g /etc/locale.gen"
arch-chroot /mnt /bin/bash -c "locale-gen"
arch-chroot /mnt /bin/bash -c "echo 'LANG=ru_RU.UTF-8' > /etc/locale.conf"
arch-chroot /mnt /bin/bash -c "echo 'KEYMAP=ru' > /etc/vconsole.conf"
arch-chroot /mnt /bin/bash -c "echo 'FONT=cyr-sun16' >> /etc/vconsole.conf"
arch-chroot /mnt /bin/bash -c "echo 'Manjaro' > /etc/hostname"
arch-chroot /mnt /bin/bash -c "echo '127.0.0.1 localhost' > /etc/hosts"
arch-chroot /mnt /bin/bash -c "echo '::1       localhost' >> /etc/hosts"
arch-chroot /mnt /bin/bash -c "echo '127.0.0.1 Manjaro.localdomain Manjaro' >> /etc/hosts"
#----------------------------PACMAN--------------------------------------------------------------
arch-chroot /mnt /bin/bash -c "sed -i s/'#ParallelDownloads = 5'/'ParallelDownloads = 5'/g /etc/pacman.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#VerbosePkgLists'/'VerbosePkgLists'/g /etc/pacman.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#Color'/'ILoveCandy'/g /etc/pacman.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'CheckSpace'/'#CheckSpace'/g /etc/pacman.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#VerbosePkgLists'/'VerbosePkgLists'/g /etc/pacman.conf"
#----------------------------SUDOERS---------------------------------------------------------------------------
arch-chroot /mnt /bin/bash -c "sed -i s/'# %wheel ALL=(ALL:ALL) ALL'/'%wheel ALL=(ALL:ALL) ALL'/g /etc/sudoers"
#----------------------------------------------------------------------------------------------------------------
echo "root:$password" | arch-chroot /mnt chpasswd
arch-chroot /mnt /bin/bash -c "mkinitcpio -P"
arch-chroot /mnt /bin/bash -c "pacman -Syy grub grub-btrfs efibootmgr --noconfirm"
arch-chroot /mnt /bin/bash -c "useradd -m -G wheel -s /bin/bash $username"
echo "$username:$userpassword" | arch-chroot /mnt chpasswd
arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager"
arch-chroot /mnt /bin/bash -c "${Uefi}"
arch-chroot /mnt /bin/bash -c "${BIOS}"
arch-chroot /mnt /bin/bash -c "${BBOOT}"
arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
arch-chroot /mnt /bin/bash -c "sed -i s/'HOOKS=(base udev autodetect modconf kms keyboard keymap consolefont block filesystems fsck)'/'HOOKS=(base udev autodetect modconf kms keyboard keymap block filesystems fsck)'/g /etc/mkinitcpio.conf"
$btr
arch-chroot /mnt /bin/bash -c "mkinitcpio -P"
arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
arch-chroot /mnt /bin/bash -c "pacman-mirrors --fasttrack"
arch-chroot /mnt /bin/bash -c "pacman -Syyuu --noconfirm"
#------------------------------------------------------------------------
arch-chroot /mnt /bin/bash -c "${nvidia_driver}"
arch-chroot /mnt /bin/bash -c "${hwddriver}"
${graphc_drivers}
${update}
${desktop}
${programs}
arch-chroot /mnt /bin/bash -c "${displaymanager}"
arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager"
arch-chroot /mnt /bin/bash -c "systemctl enable bluetooth"
#----------------------------------------------------------------------|
#                                                      #
#                     Umount and Exit                  #
#                                                      #
#----------------------------------------------------------------------|
clear
source config/logo/logo28
sleep 5
arch-chroot /mnt /bin/bash -c "exit"
# -------------------------------
# Опциональная установка драйвера Goodix GT7868Q
# -------------------------------
read -p "Установить драйвер Goodix GT7868Q для тачпада? (y/n): " install_goodix
if [[ "$install_goodix" == "y" || "$install_goodix" == "Y" ]]; then
    echo "Клонирование репозитория драйвера..."
    git clone https://github.com/ty2/goodix-gt7868q-linux-driver.git /tmp/goodix_driver
    if [ $? -ne 0 ]; then
        echo "Ошибка при клонировании репозитория драйвера."
        exit 1
    fi

    cd /tmp/goodix_driver || exit 1

    echo "Компиляция драйвера..."
    make
    if [ $? -ne 0 ]; then
        echo "Ошибка при компиляции драйвера."
        exit 1
    fi

    echo "Загрузка модуля в ядро..."
    sudo modprobe ./goodix-gt7868q.ko
    if [ $? -ne 0 ]; then
        echo "Ошибка при загрузке модуля."
        exit 1
    fi

    echo "Установка драйвера через DKMS..."
    sudo make install-dkms

    echo "Установка libinput quirks..."
    sudo make install-quirks

    QUIRKS_FILE="/usr/share/libinput/60-custom-thinkbookg6p2024imh.quirks"
    if [ -f "$QUIRKS_FILE" ]; then
        echo "Обновление quirks-файла для ThinkBook G7+ ASP..."
        sudo sed -i 's/\[Lenovo Thinkbook G6+ IMH - Goodix GT7868Q\]/[Lenovo Thinkbook G7+ ASP - Goodix GT7868Q]/' "$QUIRKS_FILE"
        sudo sed -i 's/dmi:bvnLENOVO:\*:pvrThinkBook\*G6+IMH\*:*/dmi:bvnLENOVO:*:pvrThinkBook*G7+ASP*:*/' "$QUIRKS_FILE"
    fi

    echo "Перезапись файла конфигурации для тачпада..."
    sudo tee /mnt/etc/X11/xorg.conf.d/30-touchpad.conf > /dev/null << 'EOF'
Section "InputClass"
    Identifier "touchpad"
    Driver "libinput"
    MatchIsTouchpad "on"
    Option "Tapping" "on"
    Option "TappingButtonMap" "lrm"
    # Option "NaturalScrolling" "true"
EndSection
EOF

    echo "Драйвер Goodix GT7868Q успешно установлен и настроен!"
fi

echo "Установка завершена. Система будет перезагружена."
umount -R /mnt
clear
reboot
